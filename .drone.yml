---
kind: pipeline
name: mirror

clone:
  disable: true

steps:
  - name: mirror
    image: docker.io/alpine/git
    pull: always
    environment:
      MIRROR_INSTANCE:
        from_secret: mirror_instance
      MIRROR_URL:
        from_secret: mirror_url
      MIRROR_KEY:
        from_secret: mirror_key
    commands:
      - git clone --mirror $${DRONE_GIT_HTTP_URL} .
      - eval $(ssh-agent -s)
      - echo "$${MIRROR_KEY}" | tr -d '\r' | ssh-add -
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - ssh-keyscan -t rsa $${MIRROR_INSTANCE} >> ~/.ssh/known_hosts
      - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - chmod 644 ~/.ssh/known_hosts
      - git remote set-url --push origin $${MIRROR_URL}
      - git fetch -p origin
      - git push --mirror

---
kind: pipeline
name: build

steps:
  - name: deps
    image: golang:1.14.6-buster
    volumes:
      - name: deps
        path: /go
    environment:
      GOPROXY: https://proxy.golang.org
    commands:
      - make deps

  - name: gosec
    image: golang:1.14.6-buster
    volumes:
      - name: deps
        path: /go
    environment:
      GOPROXY: https://proxy.golang.org
    commands:
      - make gosec
    depends_on:
      - deps

  - name: golangci-lint
    image: golang:1.14.6-buster
    volumes:
      - name: deps
        path: /go
    environment:
      GOPROXY: https://proxy.golang.org
    commands:
      - make golangci-lint
    depends_on:
      - deps

  - name: opa-tests
    image: node:12.18.2-buster
    commands:
      - wget --quiet https://github.com/open-policy-agent/opa/releases/download/v0.22.0/opa_linux_amd64 -O /usr/local/bin/opa
      - chmod +x /usr/local/bin/opa
      - make opa-tests
    depends_on:
      - gosec
      - golangci-lint

  - name: go-test
    image: golang:1.14.6-buster
    volumes:
      - name: deps
        path: /go
    environment:
      GOPROXY: https://proxy.golang.org
    commands:
      - make test
    depends_on:
      - gosec
      - golangci-lint


volumes:
  - name: deps
    temp: {}

---
kind: pipeline
name: release

depends_on:
  - build

trigger:
  event:
    - tag

steps:
  - name: container-image
    image: plugins/docker
    settings:
      registry:
        from_secret: registry
      username:
        from_secret: registry_user
      password:
        from_secret: registry_password
      repo: quay.io/sighup/opa-notary-connector
      dockerfile: build/Dockerfile
      purge: true
      force_tag: true
      auto_tag: true
      build_args:
        - VERSION=${DRONE_TAG}
        - COMMIT=${DRONE_COMMIT}

  - name: container-image-mirrored
    image: plugins/docker
    settings:
      registry:
        from_secret: registry_mirrored
      username:
        from_secret: registry_user_mirrored
      password:
        from_secret: registry_password_mirrored
      repo: reg.sighup.io/sighupio/opa-notary-connector
      dockerfile: build/Dockerfile
      purge: true
      force_tag: true
      auto_tag: true
      build_args:
        - VERSION=${DRONE_TAG}
        - COMMIT=${DRONE_COMMIT}

  - name: chart
    image: alpine:3.12
    environment:
      registry:
        from_secret: registry_mirrored
      username:
        from_secret: registry_user_mirrored
      password:
        from_secret: registry_password_mirrored
      repo: reg.sighup.io/sighupio/opa-notary-connector/chart
      HELM_EXPERIMENTAL_OCI: "1"
    commands:
      - wget https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz
      - tar -zxvf helm-v3.2.4-linux-amd64.tar.gz
      - mv linux-amd64/helm /usr/local/bin/helm
      - helm registry login -u $${username} -p $${password} $${registry}
      - helm chart save deployments/helm/opa-notary-connector $${repo}:${DRONE_TAG}
      - helm chart push $${repo}:${DRONE_TAG}

  - name: github-release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      title: Release ${DRONE_TAG}
      note: docs/releases/${DRONE_TAG}.md
      overwrite: true
      files:
        - LICENSE
